 string longestPalindrome(string s) {
        
        int n=s.size();
        int dp[n][n];
        for(int i=0;i<n;i++){
          for(int j=0;j<n;j++){

            dp[i][j]=0;
           
          }
        }
        
        for(int i=0;i<n;i++){
          for(int j=0;j<n;j++){

            if(i==j)dp[i][j]=1;
            else if(j-i+1==2&&s[i]==s[j])dp[i][j]=1;
              else dp[i][j]=0;
           
          }
        }
        
        for(int i=2;i<n;i++){
           int start=0,end=i;                 //start=row , end=col  
            while(start<=end&&start<n&&end<n){
                if(s[start]!=s[end])dp[start][end]=0;
                else dp[start][end]=dp[start+1][end-1];
                start++;
                end++;
            }
        
        }
        
        int start,end;
        int mx=0;
         for(int i=0;i<n;i++){
          for(int j=0;j<n;j++){

           if(dp[i][j]==1&&j-i+1>mx){
              mx=j-i+1;
               start=i;
               end=j;
           }
           
          }
        }
        
        
            string ans=s.substr(start,end-start+1);
        return ans;
        
        
        
    }
