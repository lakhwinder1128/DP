3276. Select Cells in Grid With Maximum Score
You are given a 2D matrix grid consisting of positive integers.
You have to select one or more cells from the matrix such that the following conditions are satisfied:
No two selected cells are in the same row of the matrix.
The values in the set of selected cells are unique.
Your score will be the sum of the values of the selected cells.

Return the maximum score you can achieve.
Example 1:
Input: grid = [[1,2,3],[4,3,2],[1,1,1]]
Output: 8
Explanation:



We can select the cells with values 1, 3, and 4 that are colored above.

solution:
class Solution {
public:
//   Great Intuition :)
    int solve(int ind,int mask,unordered_map<int,vector<int>>&arr,vector<vector<int>>&dp){
        if(ind>100){
            return 0;
        }
        if(dp[ind][mask]!=-1)return dp[ind][mask];
        int ans=0;
        for(int i:arr[ind]){
            // take 'ind' element from ith row
           if((mask&(1<<i))==0) ans=max(ans,solve(ind+1,(mask|(1<<i)),arr,dp)+ind);

        }
        ans=max(ans,solve(ind+1,mask,arr,dp));  // this element is not taken ( you can take or not (no compulsion))
        return dp[ind][mask]=ans;
    }
    int maxScore(vector<vector<int>>& grid) {
        unordered_map<int,vector<int>>arr;   // to check which element occur in which row
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){
                arr[grid[i][j]].push_back(i);
            }
        }
        int mask=0;// no row selected till now
        vector<vector<int>>dp(101,vector<int>(1025,-1));
        return solve(0,mask,arr,dp);
    }
};
