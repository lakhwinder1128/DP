 // int solve(int i,int j,vector<vector<int>>&dp){  // index as parameters
    //      if(i==0&&j==0)return 1;
    //      if(i<0||j<0)return 0;
    //      if(dp[i][j]!=-1)return dp[i][j];
    //      int up =solve(i-1,j,dp);
    //      int left=solve(i,j-1,dp);
    //      return dp[i][j]=up +left;
    
    // }
    int NumberOfPath(int a, int b)
    {
        //code here
        
        vector<vector<int>>dp(a,vector<int>(b,0));
       // solve(a,b,dp);
        for(int i=0;i<a;i++){
            for(int j=0;j<b;j++){
                   int up=0,left=0;
                  if(i>0)up=dp[i-1][j];
              if(j>0) left=dp[i][j-1];
           
              if(i==0&&j==0)dp[i][j]=1;
                else dp[i][j]=left+up;
            }
        }
        // solve(a-1,b-1,dp);
        return  dp[a-1][b-1];
    }
